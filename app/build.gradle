apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    //默认配置
    defaultConfig {
        applicationId "com.model.modulelib"
        minSdkVersion 15    //最低支持的Android api level
        targetSdkVersion 28
        versionCode 1   //版本号
        versionName "1.0"   //版本名
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'key1'
            keyPassword 'android'
            storeFile file('./keystore/key.jks')
            storePassword 'android'
        }
        release {
            keyAlias 'key1'
            keyPassword 'android'
            storeFile file('./keystore/key.jks')
            storePassword 'android'
        }
    }

    //build 配置（可配置多类型、多渠道）
    buildTypes {
        //release配置
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "APOLLO_HOST", "\"http://m.uat.qiaofangyun.com/\""
        }
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "String", "APOLLO_HOST", "\"http://m.qiaofangyun.com/\""
        }
    }

    //dataBinding配置
    dataBinding {
        enabled true
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //配置打包出来的apk命名
            outputFileName = getAppName() + "v" + defaultConfig.versionName + "_" + variant.buildType.name + "_" + buildTime() + "_" + defaultConfig.versionCode + "_jiagu_sign.apk"
        }
    }

    //关闭检索检查
    lintOptions {
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml")
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //okhttp3
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okio:okio:1.14.0'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    //将网络请求转化成java bean对象 也可以自定义
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    //retrofit和rxandroid连接
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    //rxjava
    implementation 'io.reactivex:rxjava:1.2.3'
    implementation 'io.reactivex:rxandroid:1.2.1'

    //dagger2
    implementation 'com.google.dagger:dagger:2.12'
    kapt 'com.google.dagger:dagger-compiler:2.12'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.10'
}

repositories {
    mavenCentral()
}

//获取打包时间
static def buildTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

//定义打包的project名
static def getAppName() {
    return "module_lib_"
}

